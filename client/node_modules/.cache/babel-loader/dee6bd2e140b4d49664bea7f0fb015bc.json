{"ast":null,"code":"import _defineProperty from \"/Users/matt/projects/ship-crew/dist/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/matt/projects/ship-crew/dist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matt/projects/ship-crew/dist/client/src/pages/ForgotPassword.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { recoverPassword } from '../redux/actions/userActions';\nimport { clearErrors } from '../redux/actions/dataActions';\nimport '../styles/Recover/forgotPassword.scss';\n\nfunction ForgotPassword(props) {\n  const _useState = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        recoveryFormInfo = _useState2[0],\n        setRecoveryFormInfo = _useState2[1];\n\n  const onChangeRecoveryForm = e => {\n    setRecoveryFormInfo(_objectSpread({}, recoveryFormInfo, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSendRecover = e => {\n    e.preventDefault();\n    props.clearErrors();\n    props.recoverPassword(recoveryFormInfo);\n  };\n\n  return React.createElement(\"div\", {\n    id: \"recover-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"recover__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/\",\n    onClick: props.clearErrors(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Home\"), props.errors.length > 0 ? props.errors.map((err, key) => React.createElement(\"div\", {\n    key: key,\n    id: \"recover__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, err), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))) : null, React.createElement(\"form\", {\n    id: \"recover__form\",\n    onSubmit: handleSendRecover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    onChange: onChangeRecoveryForm,\n    value: recoveryFormInfo.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    onChange: onChangeRecoveryForm,\n    value: recoveryFormInfo.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"New Password\",\n    onChange: onChangeRecoveryForm,\n    value: recoveryFormInfo.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confirmPassword\",\n    placeholder: \"Confirm New Password\",\n    onChange: onChangeRecoveryForm,\n    value: recoveryFormInfo.confirmPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Recover\"))));\n}\n\nconst mstp = state => ({\n  errors: state.UI.errors\n});\n\nconst matp = {\n  recoverPassword,\n  clearErrors\n};\nexport default connect(mstp, matp)(ForgotPassword);","map":{"version":3,"sources":["/Users/matt/projects/ship-crew/dist/client/src/pages/ForgotPassword.jsx"],"names":["React","useState","connect","recoverPassword","clearErrors","ForgotPassword","props","username","email","password","confirmPassword","recoveryFormInfo","setRecoveryFormInfo","onChangeRecoveryForm","e","target","name","value","handleSendRecover","preventDefault","errors","length","map","err","key","mstp","state","UI","matp"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { recoverPassword } from '../redux/actions/userActions';\nimport { clearErrors } from '../redux/actions/dataActions';\nimport '../styles/Recover/forgotPassword.scss';\n\nfunction ForgotPassword(props) {\n  const [recoveryFormInfo, setRecoveryFormInfo] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const onChangeRecoveryForm = e => {\n    setRecoveryFormInfo({\n      ...recoveryFormInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSendRecover = e => {\n    e.preventDefault();\n    props.clearErrors();\n    props.recoverPassword(recoveryFormInfo);\n  };\n\n\n  return (\n    <div id=\"recover-page\">\n      <div id=\"recover__container\">\n        <a href=\"/\" onClick={props.clearErrors()}>\n          Home\n        </a>\n        {props.errors.length > 0\n          ? props.errors.map((err, key) => (\n              <div key={key} id=\"recover__error\">\n                <h5>{err}</h5>\n                <hr />\n              </div>\n            ))\n          : null}\n        <form id=\"recover__form\" onSubmit={handleSendRecover}>\n          <input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Username\"\n            onChange={onChangeRecoveryForm}\n            value={recoveryFormInfo.username}\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={onChangeRecoveryForm}\n            value={recoveryFormInfo.email}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"New Password\"\n            onChange={onChangeRecoveryForm}\n            value={recoveryFormInfo.password}\n          />\n          <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm New Password\"\n            onChange={onChangeRecoveryForm}\n            value={recoveryFormInfo.confirmPassword}\n          />\n          <button type=\"submit\">Recover</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nconst mstp = state => ({\n  errors: state.UI.errors\n});\n\nconst matp = {\n  recoverPassword,\n  clearErrors\n};\n\nexport default connect(\n  mstp,\n  matp\n)(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}