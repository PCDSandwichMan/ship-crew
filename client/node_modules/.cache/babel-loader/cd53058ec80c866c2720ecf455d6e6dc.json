{"ast":null,"code":"/* eslint-disable no-undef */\n\n/* eslint-disable dot-notation */\n\n/* eslint-disable no-console */\nimport axios from 'axios';\nimport constants from '../types'; // - Helpers\n\nconst setAuthHeader = token => {\n  const formatedToken = \"bearer \".concat(token);\n  localStorage.setItem('token', formatedToken); // eslint-disable-next-line dot-notation\n\n  axios.defaults.headers.common['Authorization'] = formatedToken;\n}; // - Login page\n// - =========== SIGN IN AND ASSIGN TOKEN ===============\n\n\nexport const addInfo = userData => dispatch => {\n  // dispatch({ type: constants.TOGGLE_LOADING });\n  axios.post('http://localhost:8000/login', userData).then(res => {\n    setAuthHeader(res.data.token);\n    dispatch({\n      type: constants.LOGIN_USER,\n      payload: res.data.user\n    });\n    dispatch({\n      type: constants.CLEAR_ERRORS\n    });\n    window.location.assign('/home');\n  }).catch(err => {\n    dispatch({\n      type: constants.ADD_ERROR,\n      payload: err.response.status === 404 ? ['server is undergoing maintenance'] : Object.values(err.response.data)\n    });\n  });\n}; // - =========== SIGN IN AND ASSIGN TOKEN ===============\n\nexport const logoutUser = () => dispatch => {\n  console.log('this ran too');\n  localStorage.removeItem('token');\n  delete axios.defaults.headers.common['Authorization'];\n  window.location.href = '/';\n  dispatch({\n    type: constants.LOGOUT_USER\n  });\n}; // - ========== CREATE USER ===========\n\nexport const createUser = userData => dispatch => {\n  // dispatch({ type: constants.TOGGLE_LOADING });\n  dispatch({\n    type: constants.CLEAR_ERRORS\n  });\n  axios.post('http://localhost:8000/user/add', userData).then(res => {\n    dispatch({\n      type: constants.UI_ALERTS,\n      payload: {\n        confirmation: 'Account created please sign in'\n      }\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: constants.ADD_ERROR,\n      payload: Object.values(err.response.data.errors)\n    });\n  });\n}; // - Home page\n// - ================= GET USER INFO ==============\n\nexport const getUserInfo = token => dispatch => {\n  // dispatch({ type: constants.TOGGLE_LOADING });\n  dispatch({\n    type: constants.CLEAR_ERRORS\n  });\n  axios.defaults.headers.common['Authorization'] = localStorage.getItem('token');\n  axios.post('http://localhost:8000/getUserInfo', {\n    token: localStorage.getItem('token').split(' ')[1]\n  }).then(userInfo => {\n    dispatch({\n      type: constants.LOGIN_USER,\n      payload: userInfo.data.user\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: constants.ADD_ERROR,\n      payload: Object.values(err.response.data)\n    });\n  });\n}; // - ================= EDIT USER INFO ==============\n\nexport const editUserInfo = userInput => dispatch => {\n  dispatch({\n    type: constants.MODAL_STATUS,\n    payload: {\n      modalActive: true,\n      modalContent: 'viewUserProfile'\n    }\n  });\n}; // ! ======== IN DEVELOPMENT ============\n// // - ================= Upload Profile Picture ==============\n// export const uploadProfilePicture = (username, formData) => dispatch => {\n//   axios\n//     .post(`http://localhost:8000/${username}/add-image`, formData, {\n//       headers: {\n//         'Content-Type': 'multipart/form-data'\n//       }\n//     })\n//     .then(res => {\n//       console.log(res);\n//       dispatch({\n//         type: constants.UPDATE_IMAGE,\n//         payload: {\n//           profilePicture: res.user.profilePicture,\n//           profilePictureType: res.user.profilePictureType\n//         }\n//       });\n//     })\n//     .catch(err => console.log(err));\n// };\n// ! ======== IN DEVELOPMENT ============\n// - ================= Send Edited Info ===================\n\nexport const sendEditedInfo = userInput => dispatch => {\n  const currentUsername = userInput.currentUsername,\n        username = userInput.username,\n        email = userInput.email,\n        bio = userInput.bio,\n        website = userInput.website,\n        location = userInput.location;\n  console.log(userInput.userPicture);\n  axios.put(\"/\".concat(currentUsername, \"/update\"), {\n    username,\n    email,\n    bio,\n    website,\n    location\n  }).then(res => {\n    setAuthHeader(res.data.token);\n    dispatch({\n      type: constants.LOGIN_USER,\n      payload: res.data.user\n    });\n    window.location.assign('/home');\n  }).catch(err => {\n    console.log(err);\n  });\n}; // - ================= Password Recovery Form ==============\n\nexport const recoverPassword = credentials => dispatch => {\n  axios.post('http://localhost:8000/recover-password', {\n    username: credentials.username,\n    email: credentials.email,\n    password: credentials.password,\n    confirmPassword: credentials.confirmPassword\n  }).then(res => {\n    dispatch({\n      type: constants.LOGIN_RECOVER,\n      payload: res\n    });\n  }).catch(err => {\n    dispatch({\n      type: constants.ADD_ERROR,\n      payload: Object.values(err.response.data)\n    });\n  });\n}; // - ================= Get Notifications ==============\n\nexport const fetchNotifications = userInfo => dispatch => {\n  axios.get(\"http://localhost:8000/\".concat(userInfo.username, \"/notifications\")).then(res => {\n    dispatch({\n      type: constants.FETCH_NOTIFICATIONS,\n      payload: res.data.notifications\n    });\n  }).catch(err => console.log(err));\n}; // - ================= Mark Notifications As Read ==============\n\nexport const markAsRead = notificationInfo => dispatch => {\n  axios.get(\"http://localhost:8000/\".concat(notificationInfo.username, \"/\").concat(notificationInfo.id)).then(res => {\n    dispatch({\n      type: constants.FETCH_NOTIFICATIONS,\n      payload: res.data.notifications\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/matt/projects/ship-crew/dist/client/src/redux/actions/userActions.js"],"names":["axios","constants","setAuthHeader","token","formatedToken","localStorage","setItem","defaults","headers","common","addInfo","userData","dispatch","post","then","res","data","type","LOGIN_USER","payload","user","CLEAR_ERRORS","window","location","assign","catch","err","ADD_ERROR","response","status","Object","values","logoutUser","console","log","removeItem","href","LOGOUT_USER","createUser","UI_ALERTS","confirmation","errors","getUserInfo","getItem","split","userInfo","editUserInfo","userInput","MODAL_STATUS","modalActive","modalContent","sendEditedInfo","currentUsername","username","email","bio","website","userPicture","put","recoverPassword","credentials","password","confirmPassword","LOGIN_RECOVER","fetchNotifications","get","FETCH_NOTIFICATIONS","notifications","markAsRead","notificationInfo","id"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable dot-notation */\n/* eslint-disable no-console */\nimport axios from 'axios';\n\nimport constants from '../types';\n\n// - Helpers\nconst setAuthHeader = token => {\n  const formatedToken = `bearer ${token}`;\n  localStorage.setItem('token', formatedToken);\n  // eslint-disable-next-line dot-notation\n  axios.defaults.headers.common['Authorization'] = formatedToken;\n};\n\n// - Login page\n// - =========== SIGN IN AND ASSIGN TOKEN ===============\nexport const addInfo = userData => dispatch => {\n  // dispatch({ type: constants.TOGGLE_LOADING });\n  axios\n    .post('http://localhost:8000/login', userData)\n    .then(res => {\n      setAuthHeader(res.data.token);\n      dispatch({\n        type: constants.LOGIN_USER,\n        payload: res.data.user\n      });\n      dispatch({ type: constants.CLEAR_ERRORS });\n      window.location.assign('/home');\n    })\n    .catch(err => {\n      dispatch({\n        type: constants.ADD_ERROR,\n        payload:\n          err.response.status === 404\n            ? ['server is undergoing maintenance']\n            : Object.values(err.response.data)\n      });\n    });\n};\n\n// - =========== SIGN IN AND ASSIGN TOKEN ===============\nexport const logoutUser = () => dispatch => {\n  console.log('this ran too')\n  localStorage.removeItem('token');\n  delete axios.defaults.headers.common['Authorization'];\n  window.location.href = '/';\n  dispatch({ type: constants.LOGOUT_USER });\n};\n\n// - ========== CREATE USER ===========\nexport const createUser = userData => dispatch => {\n  // dispatch({ type: constants.TOGGLE_LOADING });\n  dispatch({ type: constants.CLEAR_ERRORS });\n  axios\n    .post('http://localhost:8000/user/add', userData)\n    .then(res => {\n      dispatch({\n        type: constants.UI_ALERTS,\n        payload: { confirmation: 'Account created please sign in' }\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: constants.ADD_ERROR,\n        payload: Object.values(err.response.data.errors)\n      });\n    });\n};\n\n// - Home page\n// - ================= GET USER INFO ==============\nexport const getUserInfo = token => dispatch => {\n  // dispatch({ type: constants.TOGGLE_LOADING });\n  dispatch({ type: constants.CLEAR_ERRORS });\n  axios.defaults.headers.common['Authorization'] = localStorage.getItem(\n    'token'\n  );\n  axios\n    .post('http://localhost:8000/getUserInfo', {\n      token: localStorage.getItem('token').split(' ')[1]\n    })\n    .then(userInfo => {\n      dispatch({\n        type: constants.LOGIN_USER,\n        payload: userInfo.data.user\n      });\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: constants.ADD_ERROR,\n        payload: Object.values(err.response.data)\n      });\n    });\n};\n\n// - ================= EDIT USER INFO ==============\nexport const editUserInfo = userInput => dispatch => {\n  dispatch({\n    type: constants.MODAL_STATUS,\n    payload: {\n      modalActive: true,\n      modalContent: 'viewUserProfile'\n    }\n  });\n};\n\n// ! ======== IN DEVELOPMENT ============\n// // - ================= Upload Profile Picture ==============\n// export const uploadProfilePicture = (username, formData) => dispatch => {\n//   axios\n//     .post(`http://localhost:8000/${username}/add-image`, formData, {\n//       headers: {\n//         'Content-Type': 'multipart/form-data'\n//       }\n//     })\n//     .then(res => {\n//       console.log(res);\n//       dispatch({\n//         type: constants.UPDATE_IMAGE,\n//         payload: {\n//           profilePicture: res.user.profilePicture,\n//           profilePictureType: res.user.profilePictureType\n//         }\n//       });\n//     })\n//     .catch(err => console.log(err));\n// };\n// ! ======== IN DEVELOPMENT ============\n\n// - ================= Send Edited Info ===================\nexport const sendEditedInfo = userInput => dispatch => {\n  const {\n    currentUsername,\n    username,\n    email,\n    bio,\n    website,\n    location\n  } = userInput;\n\n  console.log(userInput.userPicture);\n  axios\n    .put(`/${currentUsername}/update`, {\n      username,\n      email,\n      bio,\n      website,\n      location\n    })\n    .then(res => {\n      setAuthHeader(res.data.token);\n      dispatch({\n        type: constants.LOGIN_USER,\n        payload: res.data.user\n      });\n      window.location.assign('/home');\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\n// - ================= Password Recovery Form ==============\nexport const recoverPassword = credentials => dispatch => {\n  axios\n    .post('http://localhost:8000/recover-password', {\n      username: credentials.username,\n      email: credentials.email,\n      password: credentials.password,\n      confirmPassword: credentials.confirmPassword\n    })\n    .then(res => {\n      dispatch({\n        type: constants.LOGIN_RECOVER,\n        payload: res\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: constants.ADD_ERROR,\n        payload: Object.values(err.response.data)\n      });\n    });\n};\n\n// - ================= Get Notifications ==============\nexport const fetchNotifications = userInfo => dispatch => {\n  axios\n    .get(`http://localhost:8000/${userInfo.username}/notifications`)\n    .then(res => {\n      dispatch({\n        type: constants.FETCH_NOTIFICATIONS,\n        payload: res.data.notifications\n      });\n    })\n    .catch(err => console.log(err));\n};\n\n// - ================= Mark Notifications As Read ==============\nexport const markAsRead = notificationInfo => dispatch => {\n  axios\n    .get(\n      `http://localhost:8000/${notificationInfo.username}/${notificationInfo.id}`\n    )\n    .then(res => {\n      dispatch({\n        type: constants.FETCH_NOTIFICATIONS,\n        payload: res.data.notifications\n      });\n    })\n    .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}