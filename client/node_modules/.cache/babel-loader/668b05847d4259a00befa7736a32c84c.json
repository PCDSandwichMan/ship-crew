{"ast":null,"code":"import _defineProperty from \"/Users/matt/projects/ship-crew/dist/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/matt/projects/ship-crew/dist/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/matt/projects/ship-crew/dist/client/src/components/Modal.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { displayModal, createPost, createComment } from '../redux/actions/dataActions';\nimport { sendEditedInfo // ! ======== IN DEVELOPMENT ============\n// uploadProfilePicture\n// ! ======== IN DEVELOPMENT ============\n} from '../redux/actions/userActions';\nimport '../styles/components/modalStyles.scss';\n\nfunction Modal(props) {\n  // - Used for post creation info\n  const _useState = useState({\n    username: props.username,\n    body: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        postInfo = _useState2[0],\n        setPostInfo = _useState2[1]; // - Used for comment creation\n\n\n  const _useState3 = useState({\n    body: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        commentBody = _useState4[0],\n        setCommentBody = _useState4[1]; // - Used for editing profileInfo\n\n\n  const _useState5 = useState({\n    currentUsername: props.allUserInfo.username,\n    username: props.allUserInfo.username,\n    email: props.allUserInfo.email,\n    bio: props.allUserInfo.bio,\n    website: props.allUserInfo.website,\n    location: props.allUserInfo.location\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        profileInfoEdits = _useState6[0],\n        setProfileInfoEdits = _useState6[1]; // - ============= Handles blur toggle ===============\n\n\n  const blurWrapper = document.getElementById('home-page__blurWrapper');\n  useEffect(() => {\n    if (props.modalContent !== '') {\n      blurWrapper.classList.add('background-blur');\n    } else {\n      blurWrapper.classList.remove('background-blur');\n    }\n  }, [props.modalContent]);\n\n  const handleModalClose = () => {\n    blurWrapper.classList.remove('background-blur');\n    props.displayModal({\n      active: false,\n      modalContent: ''\n    });\n  }; // - ============= Handles post creation ===============\n\n\n  const onChangeNewPost = event => {\n    setPostInfo(_objectSpread({}, postInfo, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handlePostCreation = e => {\n    e.preventDefault();\n    props.createPost(postInfo);\n    blurWrapper.classList.remove('background-blur');\n  }; // - ============= Handles Comments creation ===============\n\n\n  const handleCommentChange = e => {\n    setCommentBody(_objectSpread({}, commentBody, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleCreateComment = e => {\n    e.preventDefault();\n    props.createComment({\n      username: props.username,\n      postId: props.currentPostDisplayed,\n      body: commentBody.body\n    });\n  }; // - ============= Handles Profile Edit ===============\n\n\n  const handleChangeProfileEdit = e => {\n    setProfileInfoEdits(_objectSpread({}, profileInfoEdits, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleProfileEdit = e => {\n    e.preventDefault();\n    props.sendEditedInfo(profileInfoEdits);\n  }; // ! ======== IN DEVELOPMENT ============\n  // // - ============== Handles Image Conversion =============\n  // // - Used for editing profileInfo\n  // const [file, setFile] = useState('');\n  // const [filename, setFilename] = useState('Choose File');\n  // const [uploadedFile, setUploadedFile] = useState({});\n  // const storeFile = e => {\n  //   setFile(e.target.files[0]);\n  //   setFilename(e.target.files[0].name);\n  // };\n  // const uploadFile = e => {\n  //   e.preventDefault();\n  //   const formData = new FormData();\n  //   formData.append('file', file);\n  //   props.uploadProfilePicture(props.username, formData);\n  // };\n  // ! ======== IN DEVELOPMENT ============\n\n\n  return React.createElement(\"div\", {\n    id: \"modal-overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    id: \"modal__close\",\n    className: \"fa fa-times-circle-o\",\n    \"aria-hidden\": \"true\",\n    onClick: handleModalClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), props.modalContent === 'addPost' ? React.createElement(\"div\", {\n    id: \"newPost-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"newPost-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Create Post\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    id: \"newPost__presetInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, props.username), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, moment().format('MMMM Do YYYY, h:mm:ss a'))), React.createElement(\"form\", {\n    id: \"newPost__form\",\n    onSubmit: handlePostCreation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"body\",\n    value: postInfo.body,\n    onChange: onChangeNewPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Save\"))) : null, props.modalContent === 'viewComments' ? React.createElement(\"div\", {\n    id: \"comments-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"comments-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, props.modalPostComments.length > 0 ? props.modalPostComments.map((comment, i) => React.createElement(\"section\", {\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, comment.createdAt), React.createElement(\"div\", {\n    id: \"comment\",\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, comment.username), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, comment.body)))) : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"No Comments\")), React.createElement(\"form\", {\n    id: \"comments_form\",\n    onSubmit: handleCreateComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"body\",\n    placeholder: \"Add Comment...\",\n    onChange: handleCommentChange,\n    value: commentBody.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Save\"))) : null, props.modalContent === 'viewUserProfile' ? React.createElement(\"div\", {\n    id: \"profile-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"profile__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleProfileEdit,\n    id: \"info__form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: profileInfoEdits.username,\n    onChange: handleChangeProfileEdit,\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: profileInfoEdits.email,\n    onChange: handleChangeProfileEdit,\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    value: profileInfoEdits.bio,\n    onChange: handleChangeProfileEdit,\n    type: \"text\",\n    name: \"bio\",\n    placeholder: \"Bio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: profileInfoEdits.location,\n    onChange: handleChangeProfileEdit,\n    type: \"text\",\n    name: \"location\",\n    placeholder: \"Location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: profileInfoEdits.website,\n    onChange: handleChangeProfileEdit,\n    type: \"text\",\n    name: \"website\",\n    placeholder: \"Website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Save Changes\")))) : null));\n}\n\nconst mapStateToProps = state => ({\n  modalActive: state.UI.modalActive,\n  modalContent: state.UI.modalContent,\n  allUserInfo: state.user,\n  username: state.user.username,\n  currentPostDisplayed: state.UI.postId,\n  modalPostComments: state.UI.modalPostComments\n});\n\nconst mapActionsToProps = {\n  displayModal,\n  createPost,\n  createComment,\n  sendEditedInfo // ! ======== IN DEVELOPMENT ============\n  // uploadProfilePicture\n  // ! ======== IN DEVELOPMENT ============\n\n};\nexport default connect(mapStateToProps, mapActionsToProps)(Modal);","map":{"version":3,"sources":["/Users/matt/projects/ship-crew/dist/client/src/components/Modal.jsx"],"names":["React","useEffect","useState","connect","moment","displayModal","createPost","createComment","sendEditedInfo","Modal","props","username","body","postInfo","setPostInfo","commentBody","setCommentBody","currentUsername","allUserInfo","email","bio","website","location","profileInfoEdits","setProfileInfoEdits","blurWrapper","document","getElementById","modalContent","classList","add","remove","handleModalClose","active","onChangeNewPost","event","target","name","value","handlePostCreation","e","preventDefault","handleCommentChange","handleCreateComment","postId","currentPostDisplayed","handleChangeProfileEdit","handleProfileEdit","format","modalPostComments","length","map","comment","i","createdAt","mapStateToProps","state","modalActive","UI","user","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport {\n  displayModal,\n  createPost,\n  createComment\n} from '../redux/actions/dataActions';\nimport {\n  sendEditedInfo,\n  // ! ======== IN DEVELOPMENT ============\n  // uploadProfilePicture\n  // ! ======== IN DEVELOPMENT ============\n} from '../redux/actions/userActions';\n\nimport '../styles/components/modalStyles.scss';\n\nfunction Modal(props) {\n  // - Used for post creation info\n  const [postInfo, setPostInfo] = useState({\n    username: props.username,\n    body: ''\n  });\n\n  // - Used for comment creation\n  const [commentBody, setCommentBody] = useState({\n    body: ''\n  });\n\n  // - Used for editing profileInfo\n  const [profileInfoEdits, setProfileInfoEdits] = useState({\n    currentUsername: props.allUserInfo.username,\n    username: props.allUserInfo.username,\n    email: props.allUserInfo.email,\n    bio: props.allUserInfo.bio,\n    website: props.allUserInfo.website,\n    location: props.allUserInfo.location\n  });\n\n  // - ============= Handles blur toggle ===============\n  const blurWrapper = document.getElementById('home-page__blurWrapper');\n\n  useEffect(() => {\n    if (props.modalContent !== '') {\n      blurWrapper.classList.add('background-blur');\n    } else {\n      blurWrapper.classList.remove('background-blur');\n    }\n  }, [props.modalContent]);\n\n  const handleModalClose = () => {\n    blurWrapper.classList.remove('background-blur');\n    props.displayModal({\n      active: false,\n      modalContent: ''\n    });\n  };\n\n  // - ============= Handles post creation ===============\n  const onChangeNewPost = event => {\n    setPostInfo({\n      ...postInfo,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handlePostCreation = e => {\n    e.preventDefault();\n    props.createPost(postInfo);\n    blurWrapper.classList.remove('background-blur');\n  };\n\n  // - ============= Handles Comments creation ===============\n  const handleCommentChange = e => {\n    setCommentBody({ ...commentBody, [e.target.name]: e.target.value });\n  };\n\n  const handleCreateComment = e => {\n    e.preventDefault();\n    props.createComment({\n      username: props.username,\n      postId: props.currentPostDisplayed,\n      body: commentBody.body\n    });\n  };\n\n  // - ============= Handles Profile Edit ===============\n  const handleChangeProfileEdit = e => {\n    setProfileInfoEdits({\n      ...profileInfoEdits,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleProfileEdit = e => {\n    e.preventDefault();\n    props.sendEditedInfo(profileInfoEdits);\n  };\n\n  // ! ======== IN DEVELOPMENT ============\n  // // - ============== Handles Image Conversion =============\n  // // - Used for editing profileInfo\n  // const [file, setFile] = useState('');\n  // const [filename, setFilename] = useState('Choose File');\n  // const [uploadedFile, setUploadedFile] = useState({});\n\n  // const storeFile = e => {\n  //   setFile(e.target.files[0]);\n  //   setFilename(e.target.files[0].name);\n  // };\n\n  // const uploadFile = e => {\n  //   e.preventDefault();\n  //   const formData = new FormData();\n  //   formData.append('file', file);\n  //   props.uploadProfilePicture(props.username, formData);\n  // };\n  // ! ======== IN DEVELOPMENT ============\n  return (\n    <div id=\"modal-overlay\">\n      <div id=\"modal-body\">\n        <i\n          id=\"modal__close\"\n          className=\"fa fa-times-circle-o\"\n          aria-hidden=\"true\"\n          onClick={handleModalClose}\n        />\n        {/* // - Add post content */}\n        {props.modalContent === 'addPost' ? (\n          <div id=\"newPost-container\">\n            <div id=\"newPost-header\">\n              <h1>Create Post</h1>\n              <hr />\n            </div>\n            <span id=\"newPost__presetInfo\">\n              <h2>{props.username}</h2>\n              <h4>{moment().format('MMMM Do YYYY, h:mm:ss a')}</h4>\n            </span>\n            <form id=\"newPost__form\" onSubmit={handlePostCreation}>\n              <textarea\n                name=\"body\"\n                value={postInfo.body}\n                onChange={onChangeNewPost}\n              />\n              <button type=\"submit\">Save</button>\n            </form>\n          </div>\n        ) : null}\n        {/* // - Comments content */}\n        {props.modalContent === 'viewComments' ? (\n          <div id=\"comments-wrapper\">\n            <div id=\"comments-container\">\n              {props.modalPostComments.length > 0 ? (\n                props.modalPostComments.map((comment, i) => (\n                  <section key={i}>\n                    <small>{comment.createdAt}</small>\n                    <div id=\"comment\" key={i}>\n                      <h3>{comment.username}</h3>\n                      <h5>{comment.body}</h5>\n                    </div>\n                  </section>\n                ))\n              ) : (\n                <h1>No Comments</h1>\n              )}\n            </div>\n            <form id=\"comments_form\" onSubmit={handleCreateComment}>\n              <input\n                type=\"text\"\n                name=\"body\"\n                placeholder=\"Add Comment...\"\n                onChange={handleCommentChange}\n                value={commentBody.body}\n              />\n              <button type=\"submit\">Save</button>\n            </form>\n          </div>\n        ) : null}\n        {/* // - Profile view and edit content */}\n        {props.modalContent === 'viewUserProfile' ? (\n          <div id=\"profile-container\">\n            <div id=\"profile__info\">\n            {/* // ! ======== IN DEVELOPMENT ============ */}\n              {/* <form onSubmit={uploadFile} encType=\"multipart/form-data\">\n                <input\n                  type=\"file\"\n                  name=\"userPicture\"\n                  accept=\".jpeg,.jpg,.png,.gif\"\n                  onChange={storeFile}\n                />\n                <button type=\"submit\">Upload File</button>\n              </form> */}\n              {/* // ! ======== IN DEVELOPMENT ============ */}\n              <form onSubmit={handleProfileEdit} id=\"info__form\">\n                <input\n                  value={profileInfoEdits.username}\n                  onChange={handleChangeProfileEdit}\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Username\"\n                />\n                <input\n                  value={profileInfoEdits.email}\n                  onChange={handleChangeProfileEdit}\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                />\n                <textarea\n                  value={profileInfoEdits.bio}\n                  onChange={handleChangeProfileEdit}\n                  type=\"text\"\n                  name=\"bio\"\n                  placeholder=\"Bio\"\n                />\n                <input\n                  value={profileInfoEdits.location}\n                  onChange={handleChangeProfileEdit}\n                  type=\"text\"\n                  name=\"location\"\n                  placeholder=\"Location\"\n                />\n                <input\n                  value={profileInfoEdits.website}\n                  onChange={handleChangeProfileEdit}\n                  type=\"text\"\n                  name=\"website\"\n                  placeholder=\"Website\"\n                />\n                <button type=\"submit\">Save Changes</button>\n              </form>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  modalActive: state.UI.modalActive,\n  modalContent: state.UI.modalContent,\n  allUserInfo: state.user,\n  username: state.user.username,\n  currentPostDisplayed: state.UI.postId,\n  modalPostComments: state.UI.modalPostComments\n});\n\nconst mapActionsToProps = {\n  displayModal,\n  createPost,\n  createComment,\n  sendEditedInfo,\n  // ! ======== IN DEVELOPMENT ============\n  // uploadProfilePicture\n  // ! ======== IN DEVELOPMENT ============\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(Modal);\n"]},"metadata":{},"sourceType":"module"}