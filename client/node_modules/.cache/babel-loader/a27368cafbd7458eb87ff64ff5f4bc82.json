{"ast":null,"code":"var _jsxFileName = \"/Users/matt/projects/ship-crew/dist/client/src/App.jsx\";\n\n/* eslint-disable dot-notation */\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport { logoutUser } from './redux/actions/userActions'; // - Pages\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport ForgotPassword from './pages/ForgotPassword'; // - Handles expired token management\n\nconst _localStorage = localStorage,\n      token = _localStorage.token;\n\nif (token) {\n  const decodedToken = jwtDecode(token);\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    logoutUser();\n  } else {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n}\n\nfunction App(props) {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/password-recovery\",\n    component: ForgotPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/home\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matt/projects/ship-crew/dist/client/src/App.jsx"],"names":["React","BrowserRouter","Router","Route","Switch","axios","jwtDecode","logoutUser","Home","Login","ForgotPassword","localStorage","token","decodedToken","exp","Date","now","defaults","headers","common","App","props"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,QAA2B,6BAA3B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,cAAP,MAA2B,wBAA3B,C,CAEA;;sBACkBC,Y;MAAVC,K,iBAAAA,K;;AACR,IAAIA,KAAJ,EAAW;AACT,QAAMC,YAAY,GAAGP,SAAS,CAACM,KAAD,CAA9B;;AACA,MAAIC,YAAY,CAACC,GAAb,GAAmB,IAAnB,GAA0BC,IAAI,CAACC,GAAL,EAA9B,EAA0C;AACxCT,IAAAA,UAAU;AAEX,GAHD,MAGO;AACLF,IAAAA,KAAK,CAACY,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDP,KAAjD;AACD;AACF;;AAED,SAASQ,GAAT,CAAaC,KAAb,EAAoB;AAClB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEZ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,oBAAZ;AAAiC,IAAA,SAAS,EAAEC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEF,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF,CADF;AAWD;;AAED,eAAeY,GAAf","sourcesContent":["/* eslint-disable dot-notation */\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\nimport { logoutUser } from './redux/actions/userActions';\n\n// - Pages\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport ForgotPassword from './pages/ForgotPassword';\n\n// - Handles expired token management\nconst { token } = localStorage;\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    logoutUser();\n    \n  } else {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n}\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/password-recovery\" component={ForgotPassword} />\n          <Route path=\"/home\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}